Topic: Guess Their Answers
Note to self: Fall Guys Art Style?

A. Grading Criteria
    • Completeness
    • Correctness
    • Creativity
    • Coding quality and style
    • OO design
    • Proper use of OOP principles
    • Modularization
    • Proper decomposition of the whole game into modules, classes, functions
    • Suitable documentation (docstrings, comments)
    • Game folder organization, readme, and report
    • Bonus pts (max 10%)
        -Creativity and additional features that are relevant, e.g.
            • Skins for players
            • More detailed animations
            • Support of a human opponent (e.g., both played on the same computer but
            using the left and right areas of keys on the same keyboard)
            • Support of multiple online players to play in turns. This can be achieved via
            socket connections, and one of the player’s program serves as the socket
            listener. (For this feature, the difficulty and workload seem too much more, so
            we do not expect students to do it, but will not restrict doing so)


B. Submission Requirements
    -Game folder (<200 MB, split into volumes if necessary)
        -Files listing packages used, 
        -Resource Files
        - Two output files: (to be put in root of Game Folder)
            - conda list -e > requirements_conda.txt
            - pip list --format=freeze > requirements_pip.txt
    -Report (Word/Pdf)
        - OO design: describe classes &  (short & effective)
        - Add-ons: state any add-ons, and describe how to play
        - Any packages used but not taught in the course (state versions if not latest)
        - List the resources in report (or done in the README.md file)

C. Basic Implementation
    -GUI: keyboard and mouse (Pygame)
    -2-player game (assumed)
    -Mechanic: Guess most common answers in a limited time, Qs and Ans given by AI
        -6 Top answers per Q; 3 rounds (subject to change)
        -No. of pts == count of audience members (subject to change)
        -enter answers using keyboard
        -both right and wrong answers from both players pop up transiently,
         (or at least kept displayed) in game scene
    -Game scene
        -2 players (subject to change)
        -question text field
        -progress bar of each player (note: may import third-party module)
        -audience poeple (on spectator stand, subject to change)
        -scoreboard of 3 rounds displayed when one round ends
    -Result
        -Player who get most points after 3 rounds wins
        -Consider draw game
    -Questions
        -Generated by AI (REST API to Azure ChatGPT)
            -during game loading time; OR
            -one by one on the fly during gameplay (not too long)
    -opponent
        -AI player
            -Generate n answers with m being most popular
            -Selection of Difficulty Level
                -Randomised order to answer Questions
                -Randomised time taken for "thinking" and "typing"
                -adjusted randomisation/time with difficulty
    -Objects
        -Players, Host, Audience, ...
        -designs
            -full body/emoji-like faces (subject to change)
        *Audience: move to/appear on players' sides accordingly (details subject to change)
    -Animations (related to bonus points)
        -Gestures: celebration, nodding, frustration, ...
        -Movements: standing, walking, hand motion, ...
    -Prompt Engineering
        -[to be figured out]
    -OO design
        -Abstraction, Encapsulation, Inheritance(Single/Multiple, Mixins)
         Polymophism, Aggregation/Composition, ABC
        (*Note: design pattern is significant -> make sure to report in UML)
        -e.g.
            -Game
            -Actor
                -Host
                -Player
                -Audience
            -Question
            -Progress bar
            -Scoreboard

Some Resources:
-sounds, sound effects
 http://ccmixter.org/ ; https://freesound.org/ ; https://freesfx.co.uk/ ;
 https://soundbible.com/

-sounds, sprites, other artwork
 https://kenney.nl/ ; https://opengameart.org/ ; https://www.gameart2d.com/

-sprites, backgrounds, tilesets
 https://craftpix.net/freebies ; https://itch.io/game-assets/free ;
 https://www.reddit.com/r/gameassets/ (<-free game assests)

 More artworks can be found here:
 https://inventwithpython.com/blog/2011/04/30/free-music-sound-effects-tiles-and-2d-art-to-use-in-your-games/